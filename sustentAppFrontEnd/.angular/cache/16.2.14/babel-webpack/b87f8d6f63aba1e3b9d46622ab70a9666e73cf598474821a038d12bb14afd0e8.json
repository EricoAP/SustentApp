{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/core/services/auth.service\";\nexport class ResetFormComponent {\n  constructor(router, fb, authService) {\n    this.router = router;\n    this.fb = fb;\n    this.authService = authService;\n    this.forgotPasswordForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n  sendEmail() {\n    console.log(this.forgotPasswordForm);\n    if (this.forgotPasswordForm.valid) {\n      this.authService.forgotEmail(this.forgotPasswordForm.value).subscribe(response => {\n        // this.router.navigate(['/home']);\n      }, error => {\n        console.error('Erro ao enviar email', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function ResetFormComponent_Factory(t) {\n    return new (t || ResetFormComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ResetFormComponent,\n    selectors: [[\"app-reset-form\"]],\n    decls: 2,\n    vars: 0,\n    template: function ResetFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"reset-form works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","ResetFormComponent","constructor","router","fb","authService","forgotPasswordForm","group","email","required","sendEmail","console","log","valid","forgotEmail","value","subscribe","response","error","_","i0","ɵɵdirectiveInject","i1","Router","i2","FormBuilder","i3","AuthService","_2","selectors","decls","vars","template","ResetFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\sustentApp\\src\\app\\modules\\forgotPassword\\components\\reset-form\\reset-form.component.ts","C:\\sustentApp\\src\\app\\modules\\forgotPassword\\components\\reset-form\\reset-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-reset-form',\n  templateUrl: './reset-form.component.html',\n  styleUrls: ['./reset-form.component.css']\n})\nexport class ResetFormComponent {\n  forgotPasswordForm: FormGroup;\n\n  constructor(private router: Router, private fb: FormBuilder, private authService: AuthService) {\n    this.forgotPasswordForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n  \n  sendEmail() {\n    console.log(this.forgotPasswordForm)\n    if (this.forgotPasswordForm.valid) {\n      this.authService.forgotEmail(this.forgotPasswordForm.value).subscribe(\n        response => {\n          // this.router.navigate(['/home']);\n        },\n        error => {\n          console.error('Erro ao enviar email', error);\n        }\n      );\n    }\n  }\n}\n","<p>reset-form works!</p>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AASnE,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,MAAc,EAAUC,EAAe,EAAUC,WAAwB;IAAzE,KAAAF,MAAM,GAANA,MAAM;IAAkB,KAAAC,EAAE,GAAFA,EAAE;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IAC9E,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MACtCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC;KACpD,CAAC;EACJ;EAEAE,SAASA,CAAA;IACPC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,kBAAkB,CAAC;IACpC,IAAI,IAAI,CAACA,kBAAkB,CAACO,KAAK,EAAE;MACjC,IAAI,CAACR,WAAW,CAACS,WAAW,CAAC,IAAI,CAACR,kBAAkB,CAACS,KAAK,CAAC,CAACC,SAAS,CACnEC,QAAQ,IAAG;QACT;MAAA,CACD,EACDC,KAAK,IAAG;QACNP,OAAO,CAACO,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CACF;;EAEL;EAAC,QAAAC,CAAA,G;qBArBUlB,kBAAkB,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlB3B,kBAAkB;IAAA4B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV/Bd,EAAA,CAAAgB,cAAA,QAAG;QAAAhB,EAAA,CAAAiB,MAAA,wBAAiB;QAAAjB,EAAA,CAAAkB,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}