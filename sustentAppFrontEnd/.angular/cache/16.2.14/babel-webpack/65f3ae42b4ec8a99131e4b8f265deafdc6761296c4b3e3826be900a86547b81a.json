{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/core/services/auth.service\";\nexport class RegisterFormComponent {\n  constructor(router, fb, authService) {\n    this.router = router;\n    this.fb = fb;\n    this.authService = authService;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n  sendLogin() {\n    if (this.loginForm.valid) {\n      this.authService.login(this.loginForm.value).subscribe(response => {\n        sessionStorage.setItem('User', this.loginForm.value.email);\n        // sessionStorage.setItem('jwtToken', response.Token);\n        // window.location.reload();\n        this.router.navigate(['/collectPoints']);\n      }, error => {\n        console.error('Erro ao fazer login', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function RegisterFormComponent_Factory(t) {\n    return new (t || RegisterFormComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterFormComponent,\n    selectors: [[\"app-register-form\"]],\n    decls: 18,\n    vars: 0,\n    consts: [[1, \"user\"], [1, \"row\", \"mb-3\"], [1, \"col-sm-6\", \"mb-3\", \"mb-sm-0\"], [\"type\", \"text\", \"id\", \"FirstName\", \"placeholder\", \"Nome\", \"name\", \"first_name\", \"formControlName\", \"name\", 1, \"form-control\", \"form-control-user\"], [1, \"col-sm-6\"], [\"type\", \"text\", \"id\", \"CPF\", \"placeholder\", \"CPF\", \"name\", \"CPF\", 1, \"form-control\", \"form-control-user\"], [1, \"mb-3\"], [\"type\", \"email\", \"id\", \"InputEmail\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"Email\", \"name\", \"email\", 1, \"form-control\", \"form-control-user\"], [\"type\", \"phone\", \"id\", \"phone\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"phone\", \"name\", \"phone\", 1, \"form-control\", \"form-control-user\"], [\"type\", \"password\", \"id\", \"examplePasswordInput\", \"placeholder\", \"Senha\", \"name\", \"password\", 1, \"form-control\", \"form-control-user\"], [\"type\", \"password\", \"id\", \"exampleRepeatPasswordInput\", \"placeholder\", \"Confirme sua senha\", \"name\", \"password_repeat\", 1, \"form-control\", \"form-control-user\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"d-block\", \"btn-user\", \"w-100\"]],\n    template: function RegisterFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelement(5, \"input\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵelement(7, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelement(9, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 1)(11, \"div\", 2);\n        i0.ɵɵelement(12, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 4);\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"button\", 11);\n        i0.ɵɵtext(16, \"Cadastrar conta\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"hr\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","RegisterFormComponent","constructor","router","fb","authService","loginForm","group","email","required","password","sendLogin","valid","login","value","subscribe","response","sessionStorage","setItem","navigate","error","console","_","i0","ɵɵdirectiveInject","i1","Router","i2","FormBuilder","i3","AuthService","_2","selectors","decls","vars","consts","template","RegisterFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext"],"sources":["C:\\sustentApp\\src\\app\\modules\\register\\components\\register-form\\register-form.component.ts","C:\\sustentApp\\src\\app\\modules\\register\\components\\register-form\\register-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.css']\n})\nexport class RegisterFormComponent {\n  loginForm: FormGroup;\n\n  constructor(private router: Router, private fb: FormBuilder, private authService: AuthService) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  sendLogin() {\n    if (this.loginForm.valid) {\n      this.authService.login(this.loginForm.value).subscribe(\n        response => {\n          sessionStorage.setItem('User', this.loginForm.value.email);\n          // sessionStorage.setItem('jwtToken', response.Token);\n          // window.location.reload();\n          this.router.navigate(['/collectPoints']);\n        },\n        error => {\n          console.error('Erro ao fazer login', error);\n        }\n      );\n    }\n  }\n\n}\n","<form class=\"user\">\n    <div class=\"row mb-3\">\n        <div class=\"col-sm-6 mb-3 mb-sm-0\">\n            <input class=\"form-control form-control-user\" type=\"text\" id=\"FirstName\" placeholder=\"Nome\"\n                name=\"first_name\" formControlName=\"name\">\n        </div>\n        <div class=\"col-sm-6\">\n            <input class=\"form-control form-control-user\" type=\"text\" id=\"CPF\" placeholder=\"CPF\"\n                name=\"CPF\">\n        </div>\n    </div>\n    <div class=\"mb-3\">\n        <input class=\"form-control form-control-user\" type=\"email\" id=\"InputEmail\" aria-describedby=\"emailHelp\"\n            placeholder=\"Email\" name=\"email\">\n    </div>\n    <div class=\"mb-3\">\n        <input class=\"form-control form-control-user\" type=\"phone\" id=\"phone\" aria-describedby=\"emailHelp\"\n            placeholder=\"phone\" name=\"phone\">\n    </div>\n    <div class=\"row mb-3\">\n        <div class=\"col-sm-6 mb-3 mb-sm-0\">\n            <input class=\"form-control form-control-user\" type=\"password\" id=\"examplePasswordInput\" placeholder=\"Senha\"\n                name=\"password\">\n        </div>\n        <div class=\"col-sm-6\">\n            <input class=\"form-control form-control-user\" type=\"password\" id=\"exampleRepeatPasswordInput\"\n                placeholder=\"Confirme sua senha\" name=\"password_repeat\">\n        </div>\n    </div>\n    <button class=\"btn btn-primary d-block btn-user w-100\" type=\"submit\">Cadastrar conta</button> <hr>\n</form>"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AASnE,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,MAAc,EAAUC,EAAe,EAAUC,WAAwB;IAAzE,KAAAF,MAAM,GAANA,MAAM;IAAkB,KAAAC,EAAE,GAAFA,EAAE;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IAC9E,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC7BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,CAAC;KACrC,CAAC;EACJ;EAEAE,SAASA,CAAA;IACP,IAAI,IAAI,CAACL,SAAS,CAACM,KAAK,EAAE;MACxB,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC,IAAI,CAACP,SAAS,CAACQ,KAAK,CAAC,CAACC,SAAS,CACpDC,QAAQ,IAAG;QACTC,cAAc,CAACC,OAAO,CAAC,MAAM,EAAE,IAAI,CAACZ,SAAS,CAACQ,KAAK,CAACN,KAAK,CAAC;QAC1D;QACA;QACA,IAAI,CAACL,MAAM,CAACgB,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;MAC1C,CAAC,EACDC,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C,CAAC,CACF;;EAEL;EAAC,QAAAE,CAAA,G;qBAxBUrB,qBAAqB,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArB9B,qBAAqB;IAAA+B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVlCf,EAAA,CAAAiB,cAAA,cAAmB;QAGPjB,EAAA,CAAAkB,SAAA,eAC6C;QACjDlB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAiB,cAAA,aAAsB;QAClBjB,EAAA,CAAAkB,SAAA,eACe;QACnBlB,EAAA,CAAAmB,YAAA,EAAM;QAEVnB,EAAA,CAAAiB,cAAA,aAAkB;QACdjB,EAAA,CAAAkB,SAAA,eACqC;QACzClB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAiB,cAAA,aAAkB;QACdjB,EAAA,CAAAkB,SAAA,eACqC;QACzClB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAiB,cAAA,cAAsB;QAEdjB,EAAA,CAAAkB,SAAA,gBACoB;QACxBlB,EAAA,CAAAmB,YAAA,EAAM;QACNnB,EAAA,CAAAiB,cAAA,cAAsB;QAClBjB,EAAA,CAAAkB,SAAA,iBAC4D;QAChElB,EAAA,CAAAmB,YAAA,EAAM;QAEVnB,EAAA,CAAAiB,cAAA,kBAAqE;QAAAjB,EAAA,CAAAoB,MAAA,uBAAe;QAAApB,EAAA,CAAAmB,YAAA,EAAS;QAACnB,EAAA,CAAAkB,SAAA,UAAI;QACtGlB,EAAA,CAAAmB,YAAA,EAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}