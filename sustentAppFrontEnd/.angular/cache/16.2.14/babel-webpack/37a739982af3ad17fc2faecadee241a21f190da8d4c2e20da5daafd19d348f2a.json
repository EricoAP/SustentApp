{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/core/services/auth.service\";\nexport class InfosContactFormComponent {\n  constructor(router, fb, authService) {\n    this.router = router;\n    this.fb = fb;\n    this.authService = authService;\n    this.adressForm = this.fb.group({\n      street: ['', [Validators.required]],\n      number: ['', [Validators.required]],\n      complement: ['', [Validators.required]],\n      neighborhood: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      state: ['', [Validators.required]],\n      zipCode: ['', [Validators.required]]\n    });\n    this.userForm = this.fb.group({\n      name: ['', [Validators.required]],\n      document: ['', [Validators.required]],\n      address: this.adressForm,\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.populate();\n  }\n  populate() {\n    this.authService.getUser().subscribe(res => {\n      const address = res.address;\n      res.address = null;\n      this.userForm.patchValue(res);\n      this.adressForm.patchValue(address);\n      console.log(this.userForm.value);\n    });\n  }\n  updateUser() {\n    if (this.userForm.valid) {\n      this.authService.update(this.userForm.value).subscribe(response => {\n        this.router.navigate(['/collectPoints']);\n      }, error => {\n        console.error('Erro ao fazer login', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function InfosContactFormComponent_Factory(t) {\n    return new (t || InfosContactFormComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InfosContactFormComponent,\n    selectors: [[\"app-infos-contact-form\"]],\n    decls: 47,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"Endere\\u00E7o\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"address\", \"placeholder\", \"Av. da Praia, 1955\", \"name\", \"address\", \"formControlName\", \"street\", 1, \"form-control\"], [1, \"row\"], [1, \"col\"], [\"for\", \"city\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"city\", \"placeholder\", \"Vit\\u00F3ria\", \"name\", \"city\", \"formControlName\", \"city\", 1, \"form-control\"], [\"for\", \"country\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"country\", \"placeholder\", \"Brasil\", \"name\", \"country\", \"formControlName\", \"state\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"country\", \"placeholder\", \"Brasil\", \"name\", \"country\", \"formControlName\", \"number\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"city\", \"placeholder\", \"Vit\\u00F3ria\", \"name\", \"city\", \"formControlName\", \"neighborhood\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"country\", \"placeholder\", \"Brasil\", \"name\", \"country\", \"formControlName\", \"zipcode\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"country\", \"placeholder\", \"Brasil\", \"name\", \"country\", \"formControlName\", \"complement\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-sm\"]],\n    template: function InfosContactFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function InfosContactFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.updateUser();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2)(3, \"strong\");\n        i0.ɵɵtext(4, \"Street\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"div\", 1)(9, \"label\", 6)(10, \"strong\");\n        i0.ɵɵtext(11, \"City\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 5)(14, \"div\", 1)(15, \"label\", 8)(16, \"strong\");\n        i0.ɵɵtext(17, \"State\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(18, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 5)(20, \"div\", 1)(21, \"label\", 8)(22, \"strong\");\n        i0.ɵɵtext(23, \"Number\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(24, \"input\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"div\", 4)(26, \"div\", 5)(27, \"div\", 1)(28, \"label\", 6)(29, \"strong\");\n        i0.ɵɵtext(30, \"Neighborhood\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(31, \"input\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\", 5)(33, \"div\", 1)(34, \"label\", 8)(35, \"strong\");\n        i0.ɵɵtext(36, \"ZipCode\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(37, \"input\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(38, \"div\", 5)(39, \"div\", 1)(40, \"label\", 8)(41, \"strong\");\n        i0.ɵɵtext(42, \"Comeplement\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(43, \"input\", 13);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(44, \"div\", 1)(45, \"button\", 14);\n        i0.ɵɵtext(46, \"Salvar\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.adressForm);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","InfosContactFormComponent","constructor","router","fb","authService","adressForm","group","street","required","number","complement","neighborhood","city","state","zipCode","userForm","name","document","address","email","phone","password","ngOnInit","populate","getUser","subscribe","res","patchValue","console","log","value","updateUser","valid","update","response","navigate","error","_","i0","ɵɵdirectiveInject","i1","Router","i2","FormBuilder","i3","AuthService","_2","selectors","decls","vars","consts","template","InfosContactFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","InfosContactFormComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty"],"sources":["C:\\sustentApp\\src\\app\\modules\\profile\\components\\infos-contact-form\\infos-contact-form.component.ts","C:\\sustentApp\\src\\app\\modules\\profile\\components\\infos-contact-form\\infos-contact-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n\n@Component({\n  selector: 'app-infos-contact-form',\n  templateUrl: './infos-contact-form.component.html',\n  styleUrls: ['./infos-contact-form.component.css']\n})\nexport class InfosContactFormComponent implements OnInit {\n  userForm: FormGroup;\n  adressForm: FormGroup;\n\n  constructor(private router: Router, private fb: FormBuilder, private authService: AuthService) {\n    this.adressForm = this.fb.group({\n      street: ['', [Validators.required]],\n      number: ['', [Validators.required]],\n      complement: ['', [Validators.required]],\n      neighborhood: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      state: ['', [Validators.required]],\n      zipCode: ['', [Validators.required]]\n    });\n\n    this.userForm = this.fb.group({\n      name: ['', [Validators.required]],\n      document: ['', [Validators.required]],\n      address: this.adressForm,\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n\n  }\n  ngOnInit(): void {\n    this.populate();\n  }\n\n  populate() {\n    this.authService.getUser().subscribe(\n      (res) => {\n        const address = res.address;\n        res.address = null;\n        this.userForm.patchValue(res);\n        this.adressForm.patchValue(address);\n        console.log(this.userForm.value)\n      }\n    )\n  }\n\n  updateUser() {\n    if (this.userForm.valid) {\n      this.authService.update(this.userForm.value).subscribe(\n        response => {\n          this.router.navigate(['/collectPoints']);\n        },\n        error => {\n          console.error('Erro ao fazer login', error);\n        }\n      );\n    }\n  }\n\n}\n","<form [formGroup]=\"adressForm\" (ngSubmit)=\"updateUser()\">\n    <div class=\"mb-3\"><label class=\"form-label\" for=\"Endereço\"><strong>Street</strong></label>\n        <input class=\"form-control\" type=\"text\" id=\"address\" placeholder=\"Av. da Praia, 1955\" name=\"address\" formControlName=\"street\">\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <div class=\"mb-3\"><label class=\"form-label\" for=\"city\"><strong>City</strong></label><input\n                    class=\"form-control\" type=\"text\" id=\"city\" placeholder=\"Vitória\" name=\"city\" formControlName=\"city\"></div>\n        </div>\n        <div class=\"col\">\n            <div class=\"mb-3\"><label class=\"form-label\" for=\"country\"><strong>State</strong></label><input\n                    class=\"form-control\" type=\"text\" id=\"country\" placeholder=\"Brasil\" name=\"country\" formControlName=\"state\"></div>\n        </div>\n        <div class=\"col\">\n            <div class=\"mb-3\"><label class=\"form-label\" for=\"country\"><strong>Number</strong></label><input\n                    class=\"form-control\" type=\"text\" id=\"country\" placeholder=\"Brasil\" name=\"country\" formControlName=\"number\"></div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <div class=\"mb-3\"><label class=\"form-label\" for=\"city\"><strong>Neighborhood</strong></label><input\n                    class=\"form-control\" type=\"text\" id=\"city\" placeholder=\"Vitória\" name=\"city\" formControlName=\"neighborhood\"></div>\n        </div>\n        <div class=\"col\">\n            <div class=\"mb-3\"><label class=\"form-label\" for=\"country\"><strong>ZipCode</strong></label><input\n                    class=\"form-control\" type=\"text\" id=\"country\" placeholder=\"Brasil\" name=\"country\" formControlName=\"zipcode\"></div>\n        </div>\n        <div class=\"col\">\n            <div class=\"mb-3\"><label class=\"form-label\" for=\"country\"><strong>Comeplement</strong></label><input\n                    class=\"form-control\" type=\"text\" id=\"country\" placeholder=\"Brasil\" name=\"country\" formControlName=\"complement\"></div>\n        </div>\n    </div>\n    <div class=\"mb-3\"><button class=\"btn btn-primary btn-sm\" type=\"submit\">Salvar</button></div>\n</form>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}