{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/core/services/auth.service\";\nexport class LoginFormComponent {\n  constructor(router, fb, authService) {\n    this.router = router;\n    this.fb = fb;\n    this.authService = authService;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n  sendLogin() {\n    if (this.loginForm.valid) {\n      this.authService.login(this.loginForm.value).subscribe(response => {\n        sessionStorage.setItem('User', response.Token);\n        // sessionStorage.setItem('jwtToken', response.Token);\n        // window.location.reload();\n        this.router.navigate(['/collectPoints']);\n      }, error => {\n        console.error('Erro ao fazer login', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function LoginFormComponent_Factory(t) {\n    return new (t || LoginFormComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginFormComponent,\n    selectors: [[\"app-login-form\"]],\n    decls: 14,\n    vars: 1,\n    consts: [[1, \"user\", 3, \"formGroup\"], [1, \"mb-3\"], [\"type\", \"email\", \"id\", \"InputEmail\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"Email\", \"name\", \"email\", \"formControlName\", \"email\", 1, \"form-control\", \"form-control-user\"], [\"type\", \"password\", \"id\", \"InputPassword\", \"placeholder\", \"Password\", \"name\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", \"form-control-user\"], [1, \"custom-checkbox\", \"small\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"id\", \"formCheck-1\", 1, \"form-check-input\"], [\"for\", \"formCheck-1\", 1, \"form-check-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"d-block\", \"btn-user\", \"w-100\", 3, \"click\"]],\n    template: function LoginFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 4)(7, \"div\", 5);\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵelementStart(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Lembrar de mim\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(11, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function LoginFormComponent_Template_button_click_11_listener() {\n          return ctx.sendLogin();\n        });\n        i0.ɵɵtext(12, \"Entrar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"hr\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","LoginFormComponent","constructor","router","fb","authService","loginForm","group","email","required","password","sendLogin","valid","login","value","subscribe","response","sessionStorage","setItem","Token","navigate","error","console","_","i0","ɵɵdirectiveInject","i1","Router","i2","FormBuilder","i3","AuthService","_2","selectors","decls","vars","consts","template","LoginFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","LoginFormComponent_Template_button_click_11_listener","ɵɵproperty"],"sources":["C:\\sustentApp\\src\\app\\modules\\login\\components\\login-form\\login-form.component.ts","C:\\sustentApp\\src\\app\\modules\\login\\components\\login-form\\login-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent {\n\n  loginForm: FormGroup;\n\n  constructor(private router: Router, private fb: FormBuilder, private authService: AuthService) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  sendLogin() {\n    if (this.loginForm.valid) {\n      this.authService.login(this.loginForm.value).subscribe(\n        response => {\n          sessionStorage.setItem('User', response.Token);\n          // sessionStorage.setItem('jwtToken', response.Token);\n          // window.location.reload();\n          this.router.navigate(['/collectPoints']);\n        },\n        error => {\n          console.error('Erro ao fazer login', error);\n        }\n      );\n    }\n  }\n}\n","<form [formGroup]=\"loginForm\" class=\"user\">\n\n    <div class=\"mb-3\">\n        <input class=\"form-control form-control-user\" type=\"email\" id=\"InputEmail\" aria-describedby=\"emailHelp\"\n            placeholder=\"Email\" name=\"email\" formControlName=\"email\">\n    </div>\n\n    <div class=\"mb-3\">\n        <input class=\"form-control form-control-user\" type=\"password\" id=\"InputPassword\" placeholder=\"Password\"\n            name=\"password\" formControlName=\"password\">\n    </div>\n\n    <div class=\"mb-3\">\n        <div class=\"custom-checkbox small\">\n            <div class=\"form-check\">\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"formCheck-1\">\n                <label class=\"form-check-label\" for=\"formCheck-1\">Lembrar de mim</label>\n            </div>\n        </div>\n    </div>\n\n    <button class=\"btn btn-primary d-block btn-user w-100\" type=\"submit\" (click)=\"sendLogin()\">Entrar</button> <hr>\n\n</form>"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AASnE,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,MAAc,EAAUC,EAAe,EAAUC,WAAwB;IAAzE,KAAAF,MAAM,GAANA,MAAM;IAAkB,KAAAC,EAAE,GAAFA,EAAE;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IAC9E,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC7BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,CAAC;KACrC,CAAC;EACJ;EAEAE,SAASA,CAAA;IACP,IAAI,IAAI,CAACL,SAAS,CAACM,KAAK,EAAE;MACxB,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC,IAAI,CAACP,SAAS,CAACQ,KAAK,CAAC,CAACC,SAAS,CACpDC,QAAQ,IAAG;QACTC,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEF,QAAQ,CAACG,KAAK,CAAC;QAC9C;QACA;QACA,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;MAC1C,CAAC,EACDC,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C,CAAC,CACF;;EAEL;EAAC,QAAAE,CAAA,G;qBAzBUtB,kBAAkB,EAAAuB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlB/B,kBAAkB;IAAAgC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV/Bf,EAAA,CAAAiB,cAAA,cAA2C;QAGnCjB,EAAA,CAAAkB,SAAA,eAC6D;QACjElB,EAAA,CAAAmB,YAAA,EAAM;QAENnB,EAAA,CAAAiB,cAAA,aAAkB;QACdjB,EAAA,CAAAkB,SAAA,eAC+C;QACnDlB,EAAA,CAAAmB,YAAA,EAAM;QAENnB,EAAA,CAAAiB,cAAA,aAAkB;QAGNjB,EAAA,CAAAkB,SAAA,eAAiE;QACjElB,EAAA,CAAAiB,cAAA,eAAkD;QAAAjB,EAAA,CAAAoB,MAAA,sBAAc;QAAApB,EAAA,CAAAmB,YAAA,EAAQ;QAKpFnB,EAAA,CAAAiB,cAAA,iBAA2F;QAAtBjB,EAAA,CAAAqB,UAAA,mBAAAC,qDAAA;UAAA,OAASN,GAAA,CAAA7B,SAAA,EAAW;QAAA,EAAC;QAACa,EAAA,CAAAoB,MAAA,cAAM;QAAApB,EAAA,CAAAmB,YAAA,EAAS;QAACnB,EAAA,CAAAkB,SAAA,UAAI;QAEnHlB,EAAA,CAAAmB,YAAA,EAAO;;;QAvBDnB,EAAA,CAAAuB,UAAA,cAAAP,GAAA,CAAAlC,SAAA,CAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}