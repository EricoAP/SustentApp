{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let RegisterFormComponent = class RegisterFormComponent {\n  constructor(router, fb, authService) {\n    this.router = router;\n    this.fb = fb;\n    this.authService = authService;\n    this.adressForm = this.fb.group({\n      street: ['', [Validators.required]],\n      number: ['', [Validators.required]],\n      complement: ['', [Validators.required]],\n      neighborhood: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      state: ['', [Validators.required]],\n      zipCode: ['', [Validators.required]]\n    });\n    this.userForm = this.fb.group({\n      name: ['', [Validators.required]],\n      document: ['', [Validators.required]],\n      adress: this.adressForm,\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n  registerUser() {\n    console.log(this.userForm);\n    if (this.userForm.valid) {\n      console.log(this.userForm);\n      this.authService.register(this.userForm.value).subscribe(response => {\n        this.router.navigate(['/collectPoints']);\n      }, error => {\n        console.error('Erro ao fazer login', error);\n      });\n    }\n  }\n};\nRegisterFormComponent = __decorate([Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.css']\n})], RegisterFormComponent);","map":{"version":3,"names":["Component","Validators","RegisterFormComponent","constructor","router","fb","authService","adressForm","group","street","required","number","complement","neighborhood","city","state","zipCode","userForm","name","document","adress","email","phone","password","registerUser","console","log","valid","register","value","subscribe","response","navigate","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\sustentApp\\src\\app\\modules\\register\\components\\register-form\\register-form.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.css']\n})\nexport class RegisterFormComponent {\n  userForm: FormGroup;\n  adressForm: FormGroup;\n\n  constructor(private router: Router, private fb: FormBuilder, private authService: AuthService) {\n    this.adressForm = this.fb.group({\n      street: ['', [Validators.required]],\n      number: ['', [Validators.required]],\n      complement: ['', [Validators.required]],\n      neighborhood: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      state: ['', [Validators.required]],\n      zipCode: ['', [Validators.required]]\n    });\n\n    this.userForm = this.fb.group({\n      name: ['', [Validators.required]],\n      document: ['', [Validators.required]],\n      adress: this.adressForm,\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n\n  }\n\n  registerUser() {\n    console.log(this.userForm)\n    if (this.userForm.valid) {\n      console.log(this.userForm)\n      this.authService.register(this.userForm.value).subscribe(\n        response => {\n          this.router.navigate(['/collectPoints']);\n        },\n        error => {\n          console.error('Erro ao fazer login', error);\n        }\n      );\n    }\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAS5D,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAIhCC,YAAoBC,MAAc,EAAUC,EAAe,EAAUC,WAAwB;IAAzE,KAAAF,MAAM,GAANA,MAAM;IAAkB,KAAAC,EAAE,GAAFA,EAAE;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IAC9E,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC9BC,MAAM,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,CAAC,CAAC;MACnCC,MAAM,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,CAAC,CAAC;MACnCE,UAAU,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACS,QAAQ,CAAC,CAAC;MACvCG,YAAY,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACS,QAAQ,CAAC,CAAC;MACzCI,IAAI,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACS,QAAQ,CAAC,CAAC;MACjCK,KAAK,EAAE,CAAC,EAAE,EAAE,CAACd,UAAU,CAACS,QAAQ,CAAC,CAAC;MAClCM,OAAO,EAAE,CAAC,EAAE,EAAE,CAACf,UAAU,CAACS,QAAQ,CAAC;KACpC,CAAC;IAEF,IAAI,CAACO,QAAQ,GAAG,IAAI,CAACZ,EAAE,CAACG,KAAK,CAAC;MAC5BU,IAAI,EAAE,CAAC,EAAE,EAAE,CAACjB,UAAU,CAACS,QAAQ,CAAC,CAAC;MACjCS,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAClB,UAAU,CAACS,QAAQ,CAAC,CAAC;MACrCU,MAAM,EAAE,IAAI,CAACb,UAAU;MACvBc,KAAK,EAAE,CAAC,EAAE,EAAE,CAACpB,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACoB,KAAK,CAAC,CAAC;MACpDC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACrB,UAAU,CAACS,QAAQ,CAAC,CAAC;MAClCa,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACtB,UAAU,CAACS,QAAQ,CAAC;KACrC,CAAC;EAEJ;EAEAc,YAAYA,CAAA;IACVC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,QAAQ,CAAC;IAC1B,IAAI,IAAI,CAACA,QAAQ,CAACU,KAAK,EAAE;MACvBF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,QAAQ,CAAC;MAC1B,IAAI,CAACX,WAAW,CAACsB,QAAQ,CAAC,IAAI,CAACX,QAAQ,CAACY,KAAK,CAAC,CAACC,SAAS,CACtDC,QAAQ,IAAG;QACT,IAAI,CAAC3B,MAAM,CAAC4B,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;MAC1C,CAAC,EACDC,KAAK,IAAG;QACNR,OAAO,CAACQ,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C,CAAC,CACF;;EAEL;CAED;AAzCY/B,qBAAqB,GAAAgC,UAAA,EALjClC,SAAS,CAAC;EACTmC,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWnC,qBAAqB,CAyCjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}